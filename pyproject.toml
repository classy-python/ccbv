[project]
name = "ccbv"
version = "1.0.0"
description = "Tool to view class hierarchies"
requires-python = ">=3.13"
dependencies = [
    "attrs>=21.4.0",
    "blessings>=1.7",
    "django~=5.2",
    "django-extensions>=3.1.3",
    "django-pygmy>=0.1.5",
    "django-sans-db>=1.2.0",
    "environs[django]>=14.1.1",
    "gunicorn>=23.0.0",
    "requests>=2.32.3",
    "sphinx>=8.1.3",
    "werkzeug>=3.1.3",
    "whitenoise>=6.9.0",
]

[dependency-groups]
dev = [
    "coverage[toml]>=7.8.0",
    "factory-boy>=3.2.0",
    "mypy>=1.15.0",
    "mypy-json-report>=0.1.3",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-django>=4.11.1",
    "types-requests>=2.27.7",
]

[tool.coverage.run]
branch = true
dynamic_context = "test_function"

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    # Protocol classes are abstract, and don't need coverage.
    "nocoverage: protocol",
]

[tool.coverage.html]
show_contexts = true

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
many_errors_threshold = -1
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
python_files = [
  "test_*.py",
]

[tool.ruff]
extend-exclude = [
    ".env",
]
target-version = "py313"

[tool.ruff.lint]
extend-select = [
  "A",  # flake8-builtins
  "I",  # isort
  "INP",  # flake8-no-pep420
  "ISC",  # flake8-implicit-str-concat
  "UP",  # pyupgrade
  "W",  # pycodestyle warning
]
extend-ignore = [
  "E731",  # allow lambda assignment
]

[tool.ruff.lint.isort]
lines-after-imports = 2
